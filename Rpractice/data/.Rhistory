shiny::runApp('Documents/workspace/stockVis')
shiny::runApp('Documents/workspace/stockVis')
data <-c(16,10,49,15,6,15,8,19,11,22,13,17)
summary(data)
IQR(data)
sd(data)
library(googleVis)
install.packages("googleVis")
library(googleVis)
install.packages("swirl")
library(swirl)
swirl()
swirl()
num_vect<-0.5,55,-10,6
num_vect <- [0.5,55,-10,6]
num_vect <-c(0.5,55,-10,6)
tf <- num_vect <1
print(tf)
tf
foo <-num_vect >6
num_vect > 6
num_vect >= 6
characterVector <-c("My","name","is")
info()
play()
nxt()
characterVector <-c("My","name","is")
my_char <-c("My","name","is")
my_char
my_char <-c("My","name","is")
paste(my_char,collapse="")
paste(my_char,collapse=" ")
c(my_char,"pranay")
c(my_char,"Pranay")
my_name <-c(my_char,"Pranay")
my_name
paste(my_name,collapse=" ")
paste("hello","world!",sep =" ")
paste("Hello","world!",sep =" ")
paste(1:3,c("x","y","z"))
paste(1:3,c("x","y","z"), sep="")
paste(1:3,c("X","Y","Z"), sep="")
paste(LETTERS,1:4, sep ="-")
library(swift)
library(swirl)
ls()
rm(list=ls())
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
swirl()
library(swirl)
swirl()
?sapply
class(cls_list)
as.character(cls_list)
swirl()
cls_vect<-sapply()
?sapply
swirl()
swirl()
2
cls_vect <-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes,range())
lapply(range(),flag)shapes)
lapply(range(),flag_shapes)
head(flag_shapes,3)
lapply(flag_shapes,range)
shape_mat <-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flag_shapes,unique)
unique_vals <-lapply(flags, unique)
print(unique_vols)
unique_vols
unique_vals
library(swirl)
swirl()
unique_vals
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,2)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(hello)
str
str(plants)
install.packages("Rcdmr")
install.packages("Rcmdr")
library(swirl)
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants,3)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <-is.na(my_data)
my_na
my_data==is.na
my_data=NA
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
library(ggplot2)
head(diamonds)
head(mtcars)
qplot(clarity, data=diamonds, fill=cut, geom="bar")
qplot(wt,mpg,data=mtcars)
qplot(log(wt), mpg - 10, data=mtcars)
qplot(wt, mpg, data=mtcars, color=qsec)
qplot(wt, mpg, data=mtcars, color=disp)
qplot(wt, mpg, data=mtcars, color=disp,size=3)
qplot(wt, mpg, data=mtcars, alpha=disp,size=3)
qplot(wt, mpg, data=mtcars, color=cyl)
levels(mtcars$cyl)
qplot(wt, mpg, data=mtcars, colour=factor(cyl))
str(mtcars)
levels(mtcars$cyl)
qplot(wt, mpg, data=mtcars, shape=factor(cyl))
qplot(wt, mpg, data=mtcars, colour=factor(cyl))
qplot(wt, mpg, data=mtcars, color=factor(cyl))
qplot(wt, mpg, data=mtcars, size=qsec)
qplot(wt, mpg, data=mtcars, size=qsec, color=factor(carb))
head(mtcars)
qplot(wt, mpg, data=mtcars, size=qsec, color=factor(carb), shape=I(1))
?factor
qplot(wt, mpg, data=mtcars, size=qsec, shape=factor(cyl), geom="point")
qplot(wt, mpg, data=mtcars, size=factor(cyl), geom="point")
qplot(factor(cyl), data=mtcars, geom="bar")
qplot(factor(cyl), data=mtcars, geom="bar") + coord_flip()
qplot(factor(cyl), data=mtcars, geom="bar", fill=factor(cyl))
qplot(factor(cyl), data=mtcars, geom="bar", colour=factor(cyl))
qplot(factor(cyl), data=mtcars, geom="bar", fill=factor(gear))
head(diamonds)
qplot(clarity, data=diamonds, geom="bar", fill=cut, position="stack")
qplot(clarity, data=diamonds, geom="bar", fill=cut, position="dodge")
qplot(clarity, data=diamonds, geom="bar", fill=cut, position="fill")
qplot(clarity, data=diamonds, geom="bar", fill=cut, position="identity")
nrow(diamonds)
qplot(clarity, data=diamonds, geom="freqpoly", group=cut, colour=cut, position="identity")
qplot(clarity, data=diamonds, geom="freqpoly", group=cut, colour=cut, position="stack")
qplot(clarity, data=diamonds, geom="freqpoly", group=cut, colour=cut, position="stack")
qplot(clarity, data=diamonds, geom="freqpoly", group=cut, colour=cut, position="identity")
qplot(clarity, data=diamonds, geom="freqpoly", group=cut, colour=cut, position="stack")
table(diamond$cut)
table(diamonds$cut)
head(diamonds)
t.table <- ddply(diamonds, c("clarity", "cut"), "nrow")
library(plyr)
t.table <- ddply(diamonds, c("clarity", "cut"), "nrow")
head(t.table)
qplot(cut, nrow, data=t.table, geom="bar")
qplot(cut, nrow, data=t.table, geom="bar",stat="identity")
qplot(cut, nrow, data=t.table, geom="bar",stat="identity",fill=clarity)
qplot(cut, data=diamonds, geom="bar", weight=carat)
qplot(cut, data=diamonds, geom="bar", weight=carat, ylab="carat")
ddply(diamonds,"cut","nrow")
ddply(diamonds,"cut",mean)
ddply(diamonds, "cut", mean)
ddply(diamonds, "cut", summarise, meanDepth = mean(depth))
head(diamonds,3)
ddply(diamonds, "cut", summarise, lower = quantile(depth, 0.25, na.rm=TRUE), median = median(depth, na.rm=TRUE), upper = quantile(depth, 0.75, na.rm=TRUE))
qplot(carat, data=diamonds, geom="histogram")
qplot(carat, data=diamonds, geom="histogram", binwidth=0.1)
qplot(carat, data=diamonds, geom="histogram", binwidth=0.01)
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"))
qplot(wt, mpg, data=mtcars, geom=c("smooth", "point"))
qplot(wt, mpg, data=mtcars, color=factor(cyl), geom=c("point", "smooth"))
swirl()
library(swirld)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(data)
head(plants)
swirl()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=F)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1),100,prob=c(0.3,0.7))
flips <- sample(c(0,1),100,prob=c(0.3,0.7),replace=T)
flips <- sample(c(0,1),100,replace=T,prob=c(0.3,0.7)
)
flips <- sample(c(0,1),100,replace=T,prob=c(0.3,0.7))
sample(c(0,1),100,replace=T,prob=c(0.3,0.7))
info()
play()
nxt()
flips <-sample(c(0,1),100,replace=T,prob=c(0.3,0.7))
flips <-
| sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum()
sum(flips)
?rbinom
rbinom(1,100,prob=0.7)
rbinom(1,1000,prob=0.7)
rbinom(1,10000,prob=0.7)
rbinom(1,1000000000,prob=0.7)
flips2 <- ribinom(100,1,prob=0.7)
flips2 <- rbinom(100,1,prob=0.7)
flips2
sum(flips2)
rnorm()
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
colMeans()
colMeans(99)
?colMeans
colMeans(3,na.rm=F,dims=1)
colMeans(c(3,2),na.rm=F,dims=1)
colMeans(my_pois)
cm<-colMeans(my_pois)
hist(cm)
1
swirl()
1
swirl()
quit()
exp(5.43322e-06)
exp(5.43322e-06)
5.43322e-06
?exp
round(5.43322e-06)
round(5.43322e-06,5)
round(5.43322e-06,4)
pnorm(7200,1072,80,T)
pnorm(720,1072,80,T)
pnorm(1250,1072,80,F)
5.412544e-06+0.01304062
0.01304603-0.01304062
install.packages('caret')
library(caret)
pnorm(1000,721,454,F)
pnorm(100,721,454,T)
pnorm(700,721,454,T)
?rnorm
rnorm(700,721,454,T)
rnorm(700,721,454)
pnorm((700-721)/(454/sqrt(50))),721,454,T)
pnorm((700-721)/(454/sqrt(50)),721,454,T)
pnorm((700-721)/(454/sqrt(50)),721,454,T)
rnorm((700-721)/(454/sqrt(50)),721,454,T)
rnorm((700-721)/(454/sqrt(50)),721,454)
qnorm((700-721)/(454/sqrt(50)),721,454)
rnorm((700-721)/(454/sqrt(50)),721,454,T
rnorm((700-721)/(454/sqrt(50)),721,454,T)
(700-721)/(454/sqrt(50)
(700-721)/(454/sqrt(50))
pnorm(-0.33,721,454,T)
qnorm(-0.33,721,454,T)
qnorm(-0.33,T)
qnorm(-0.33,1,0,T)
pnorm(-0.33,1,0,T)
pnorm(-0.33,0,1,T)
pnorm(700,721,64.205,T)
rnorm(-0.33,0,1)
qnorm(-0.33,0,1,T)
dnorm(-0.33,0,1)
pnorm(-0.3271,0,1,T)
(1000-721)/(454/sqrt(50))
pnorm(4.345435,0,1)
pnorm(4.345435,0,1,F)
(600-721)/(454/sqrt(10))
t<-(1000-721)/(454/sqrt(50))
pnorm(t,0,1,F)
pnorm(t,1,0,F)
t<-(600-721)/(454/sqrt(10))
pnorm(t,1,0,F)
pnorm(t,0,1,F)
qnorm(0.95,5.7,1,F)
qnorm(0.95,5.7,1,T)
qnorm(0.95,0,1,F)
qnorm(0.95,0,1,T)
qnorm(0.95,9,0.33,T)
qnorm(0.95,5.6,0.33,T)
?qnorm
?t quantile
??t quantile
??tquantile
qt(0.975,49)
qt(0.995,31)
qt(0.95,15)
qt(0.975,24)
0.25+-(2.064)
0.25+-(qt(0.975,24)*0.1/sqrt(24))
0.25+(qt(0.975,24)*0.1/sqrt(24))
0.25-(qt(0.975,24)*0.1/sqrt(24))
0.25+/-(qt(0.975,24)*0.1/sqrt(24))
0.25+-(qt(0.975,24)*0.1/sqrt(24))
0.25%+-%(qt(0.975,24)*0.1/sqrt(24))
0.25 %+-% (qt(0.975,24)*0.1/sqrt(24))
install.packages(grDevices)
install.packages('grDevices')
install.packages("grDevices")
install.packages("grDevices")
?rnorm
?pbinom
?rnorm
pnorm(65,0,1,T)
pnorm(65,67,20,T)
pnorm(65,67,4,T)
pnorm(100,105,(35/(sqrt(80))),F)
pnorm(1105,(35/(sqrt(80))),F)
pnorm(19.5,18,0.33,T)
pnorm(19.5,18,0.67,T)
pnorm(19.5,18,0.667,T)
pnorm(19.5,18,0.667,F)
pnorm(7,5.85,0.7,F)
112/5
112/25
qt(0.975,24)
qt(0.975,25)
450+(2.064*22.4)
450-(2.064*22.4)
11.1+(qt(0.975,99)*2.8/10)
11.1-(qt(0.975,99)*2.8/10)
qnorm(0.95,11.1,0.28,T)
qnorm(0.95,11.1,0.28,F)
getwd()
setwd('./documents/workspace')
list.files()
setwd('./Rpractice')
list.files()
setwd('./data/')
list.files()
setwd('./twitter')
library(twitteR)
library(plyr)
tweets=searchTwitter("#abortion",n=1500)
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret=" P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
library(twitte$)
library(twitteR)
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret=" P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
library(plyR)
library(plyr)
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret=" P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
getTwitterOAuth("uSd7HRMa208ZMZkd3eLvI4LLo", "P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret=" P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
library(httr)
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret=" P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
sig = sign_oauth1.0(myapp,
token = "264955050-PSH9QyqyEO7eNq2UaWzhlECXkeuznNAuTZctupQ0",
token_secret = "SPLfiuFO1wgjob4mPScAj7Fl4kv46GF6rLS2Opmo2n1NL")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
dimnames(json2)
json2[1,1:4]
head(json2)
json1
homeTL
library(rjson)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
library(rjsonio)
library(rjsonIO)
library(RJSONIO)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
library(R JSONIO)
library(RJSONIO)
json2[1,1:4]
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:3]
json2[1,2]
library(rjson)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,2]
library(jsonlite)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,2]
json2[1, 1:4]
json1
myapp = oauth_app("twitter",
key=uSd7HRMa208ZMZkd3eLvI4LLo,secret=P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN)
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret="P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
sig = sign_oauth1.0(myapp,
token = "264955050-PSH9QyqyEO7eNq2UaWzhlECXkeuznNAuTZctupQ0",
token_secret = " SPLfiuFO1wgjob4mPScAj7Fl4kv46GF6rLS2Opmo2n1NL")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret="P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
sig = sign_oauth1.0(myapp,
token = "264955050-PSH9QyqyEO7eNq2UaWzhlECXkeuznNAuTZctupQ0",
token_secret = " SPLfiuFO1wgjob4mPScAj7Fl4kv46GF6rLS2Opmo2n1NL")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2
myapp = oauth_app("twitter",
key="uSd7HRMa208ZMZkd3eLvI4LLo",secret="P9p2FlhAVghxxpYMXofB3NFu9MkkBQIYLrPQSEJKtzjtxLplEN")
sig = sign_oauth1.0(myapp,
token = "264955050-PSH9QyqyEO7eNq2UaWzhlECXkeuznNAuTZctupQ0",
token_secret = " SPLfiuFO1wgjob4mPScAj7Fl4kv46GF6rLS2Opmo2n1NL")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
sig = sign_oauth1.0(myapp,
token = "264955050-PSH9QyqyEO7eNq2UaWzhlECXkeuznNAuTZctupQ0",
token_secret = "SPLfiuFO1wgjob4mPScAj7Fl4kv46GF6rLS2Opmo2n1NL")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2[1:4,1:4]
dimnames(json2)
class[json2]
class(json2)
head(json2$text)
head(json$text,10)
head(json2$text,10)
dimnames(json2)
head(json2$geo)
json2$geo
dims(json2$geo)
nrows(json2$geo)
nrow(json2$geo)
json2$geo
head(json2)
dimnames(json2)
json2[,13]
json2[1,13]
json2[2,5]
