loginPrompt <- function() {
courseid <- get_courseid()
email <- readline("Submission login (email): ")
passwd <- readline("Submission  password: ")
r <- list(courseid = courseid, email = email, passwd = passwd)
assign(".CourseraLogin", r, globalenv())
invisible(r)
}
function(manual = FALSE, resetLogin = FALSE) {
checkPkgs()
suppressPackageStartupMessages(library(RCurl))
library(digest)
library(stringr)
readline("\nPress Enter to continue...")
if(!manual) {
confirmed <- FALSE
need2fix <- FALSE
while(!confirmed) {
if(exists(".CourseraLogin") && !resetLogin && !need2fix)
cred <- get(".CourseraLogin")
else
cred <- loginPrompt()
if(!is.list(cred) || !(names(cred) %in% c("email", "passwd", "courseid")))
stop("problem with login/password")
courseid <- cred$courseid
email <- cred$email
password <- cred$passwd
pretty_out("Is the following information correct?",
skip_after=TRUE)
message("Course ID: ", courseid,
"\nSubmission login (email): ", email,
"\nSubmission password: ", password)
yn <- c("Yes, go ahead!",
"No, I need to change something.")
confirmed <- identical(select.list(yn, graphics=FALSE), yn[1])
if(!confirmed) need2fix <- TRUE
}
## Set urls based on confirmed courseid
challenge.url <- paste("http://class.coursera.org", courseid,
"assignment/challenge", sep = "/")
submit.url <- paste("http://class.coursera.org", courseid,
"assignment/submit", sep = "/")
}
## Prompt Submission Part
sid <- partPrompt()
## Get output
output <- getOutput(sid)
if(!manual) {
## Get challenge
ch <- try(getChallenge(email, challenge.url), silent=TRUE)
## Check if url is valid, i.e. challenge received
ch_ok <- !is(ch, "try-error") && exists("ch.key", ch) && !is.na(ch$ch.key)
if(!ch_ok) {
stop("Either the course ID you entered is not valid or your course site ",
"is unreachable at this time. If you'd like to submit manually, you ",
"can run submit(manual=TRUE).")
}
## Attempt submission with challenge
ch.resp <- challengeResponse(password, ch$ch.key)
results <- submitSolution(email, ch.resp, sid, output, ch$state,
submit.url = submit.url)
if(!length(results))
results <- "Incorrect!"
cat("Result: ", results, "\n")
}
else {
outfile <- paste(sid, "output.txt", sep = "-")
writeLines(as.character(output), outfile)
cat(sprintf("Please upload the file '%s' to Coursera\n",
outfile))
}
invisible()
}
})
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
return(dat)
}
complete("spectata",3)
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
print(dat)
}
complete("spectata",3)
getwd()
list.files()
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
print(dat)
}
complete("spectata",3)
complete("spectata",3)
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
print(dat)
}
complete("spectata",3)
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
print(dat)
}
complete("spectata",3)
complete("spectata",6)
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
print(dat)
}
complete("spectata",6)
getwd()
setwd("./complete.R")
setwd("./../")
getwd()
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
print(dat)
}
complete("spectata",6)
list.files()
setwd("./courseraR")
list.files()
head(specdata)
complete <- function(directory, id=1:332)  {
files_list <- list.files(directory, full.names=TRUE)
tab <- data.frame() #creates an empty data frame
dat <-data.frame()
for (id in id) {
tab <- read.csv(files_list[id])
comp <- complete.cases(tab)
nobs <-sum(comp)
dat <- rbind(dat,data.frame(id,nobs))
}
print(dat)
}
complete("spectata",6)
list.files()
setwd('./../')
list.files()
setwd('./clas')
setwd('./class')
list.files()
dat <-read.csv("cholesterol(2).csv",header=T)
head(dat)
prompt("how are")
list.files9
list.files()
delete("how are.Rd")
ldl.pre-ldl.post
dat$ldl.chg <- dat$ldl.pre-dat$ldl.post
head(dat)
hist(dat$ldl.chg)
skewness(dat$ldl.chg)
skew(dat$ldl.chg)
library(e1071)
skewness(dat$ldl.chg)
skewness(dat$ldl.chg, dat$treatment=="med")
submit()
getwd()
setwd("./../")
list.files()
setwd("./courseraR")
list.files()
submit()
getwd()
setwd("./../")
getwd()
list.files()
setwd("./Class")
list.files()
dat <-read.csv("cholesterol(2).csv",header=T)
head(dat)
dat$ldl.chg <- dat$ldl.post=dat$ldl.pre
dat$ldl.chg <- dat$ldl.post-dat$ldl.pre
head(dat)
library(e1707)
library(e7107)
library(e1071)
skewness(dat$ldl.chg)
hist(dat$ldl.chg)
med <- subset(dat[,2]=="med")
med <- subset(dat,dat[,2]=="med")
head(med)
tail(med)
nrow(med)
skewness(med$ldl.chg)
hist(med$ldl.chg)
summary(med$ldl.chg)
dietex <- subset(dat,dat[,2]=="diet.ex")
head(dietex)
nrow(diet.ex)
nrow(dietex)
skewnness(dietex$ldl.chg)
skewness(dietex$ldl.chg)
hist(dietex$ldl.chg)
summary(dietex$ldl.chg)
famhist <- table(med$treatment,med$fam.hist)
famhist
head(med)
tail(med)
famhist
18/57
famhist <-table(dietex$treatment,dietex$fam.hist)
famhist
18/75
24/75
hist(dietex$ldl.chg)
skewness(dietex$ldl.chg)
IQR(dietex$ldl.chg)
range(dietex$ldl.chg)
summary(dietex$ldl.chg)
-12.75+8.26
sd(dietex$ldl.chg)
kurtosis(dietex$ldl.chg)
hist(med$ldl.chg)
skewness(med$ldl.chg)
range(med$ldl.chg)
summary(med$ldl.chg)
max(med$ldl.chg)-min(med$ldl.chg)
head(med)
med$wt.chg <-med$wt.pre-med$wt.post
head(med)
summary(med$wt.chg)
dietex$wt.chg <- dietex$wt.pre-dietex$wt.post
head(dietex)
summary(dietex$wt.chg)
skewness(med$wt.chg)
hist(med$wt.chg)
skewness(dietex@wt.chg)
skewness(dietex$wt.chg)
hist(dietex$wt.chg)
IQR(dietex$wt.chg)
range(dietex$wt.chg)
range(dietex$ldl.chg)
-21.1+4
max(med$ldl.chg)
min(med$ldl.chg)
-20+10
med
hist(med$ldl.chg)
range(med$ldl.chg)
summary(dietex$ldl.chg)
hist(dietex$ldl.chg)
hist(med$wt.chg)
hist(dietex$wt.chg)
summary(dietex$ldl.chg)
summary(dietex$wt.chg)
summary(dietex$wt.chg)
summary(med$wt.chg)
head(dietex)
head(med)
famhist <- table(med$treatment,med$fam.hist)
famhist1<- table(dietex$treatment,dietex$fam.hist)
famhist
famhist1
famhistmed <- subset(med,med[,7]=="yes")
head(famhistmed)
famhistdx <- subset(dietex,dietex[,7]=="yes")
head(famhistdx)
hist(famhistmed$ldl.chg)
hist(famhistdx$ldl.chg)
summary(famhistmed$ldl.chg)
summary(famhistdx$ldl.chg)
nofhmed <- subset(med,med[,7]=="no")
nofhdx <- subset(dietex,dietex[,7]="no")
nofhdx <- subset(dietex,dietex[,7]=="no")
hist(nofhmed$ldl.chg)
summary(nofhmed$ldl.chg)
hist(nofhdx$ldl.chg)
summary(nofhdx$ldl.chg)
norow(nofhmed)
nrow(nofhmed)
nrow(nofhdx)
hist(nofhmed$ldl.chg)
nrow(famhistmed)
nrow(famhistdx)
nrow(dat)
57+51+18+24
57+51
108/150
getwd()
setwd("./..")
list.files()
setwd("./courseraR")
list.files()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("./rprog-data-ProgAssignment3-data")
list.files()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
class(outcome[,3])
clas(outcome)
class(outcome[,7])
str(outcome)
ncol(outcome)
names(outcome)
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
?sapply
help(Distributions)
num <- -1
if(num > 0) {
cat("The number is greater than 0")
} else if(num < 0) {
cat("The number is less than 0")
} else {
cat("The number is 0")
}
opts_knit$set(base.dir='./', fig.path='', out.format='md')
opts_chunk$set(prompt=FALSE, comment='', results='markup')
for(item in c("Hello","World","Hi")) {
message(item)
}
for(item in list(a=c(1,2,3),b=c("a","b","c","d"))) {
str(item)
}
df <- data.frame(x=c(1,2,3),y=c("A","B","C"),stringsAsFactors = FALSE)
for(col in df) {
str(col)
}
ls()
head(famhistmed)
head(ok)
objects()
library(swirl)
ls()
rm(list=ls())
swirl()
swirl()
swirl()
1
swirl()
swirld()
swirl()
num_vect <-c(0.5,55,-10,6)
tf <- num_vect <1
tf
num_vect >=6
c('My',"name","is")
my_char <- c("My","name","is")
my_char
paste(my_char, collapse =" ")
my_name <-c(my_char, "pranay")
my_name
paste(my_name)
paste(my_name,collapse =" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
int <- c(2,3,4)
paste(1:3,c("X","Y","Z")
paste(1:3,c("X","Y","Z"))
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTER, 1:4,sep="")
paste(LETTERS, 1:4,sep="")
paste(LETTERS, 1:4,sep="-")
install.packages("prob")
library(prob)
tosscoin(1)
head(cards())
cards()
table <-read.table(,Never=c(57,133,117),Occasionally=c(98,112,28),Regularly=c(145,55,5))
table <-read.table(Never=c(57,133,117),Occasionally=c(98,112,28),Regularly=c(145,55,5))
table <- matrix(c(57,98,145,133,112,55,117,28,5),ncol=3,byrow=TRUE)
table
colnames(o)<-c("Never","Occasionally","Regularly")
colnames(0)<-c("Never","Occasionally","Regularly")
colnames<-c("Never","Occasionally","Regularly")
rownames <-c("Private","Public","None")
table
table[,c("Never","Occasionally","Regularly")]<-table[,c(1:3)]
colnames(table)<-c("Never","Occasionally","Regularly")
rownames(table)<-c("Private","Public","None")
table
table$total<-margin.table(1)
table$total<-margin.table[1,]
table$total<-margin.table
table
table
head(table)
rownames(table)<-c("Private","Public","None")
table <- matrix(c(57,98,145,133,112,55,117,28,5),ncol=3,byrow=TRUE)
rownames(table)<-c("Private","Public","None")
colnames(table)<-c("Never","Occasionally","Regularly")
table
margin.table(table,1)
table$total <-margin.table(table,c(1:3))
table
table$total <-margin.table(table,1:3)
table
table$total <-margin.table(table,1)
table
table <- matrix(c(57,98,145,133,112,55,117,28,5),ncol=3,byrow=TRUE)
colnames(table)<-c("Never","Occasionally","Regularly")
rownames(table)<-c("Private","Public","None")
table
union(table[1,1],table[1,3])
union(table[,1],table[,3])
prob(table[1,1])
Prob(table[1,1])
class(table)
table <- as.table(table)
class(table)
Prob(table[1,1])
table
prop.table(table)
prop.table(table,1)
prop.table(table,2)
margin.table(table)
margin.table(table,1)
table$total <-margin.table(table,1)
table
table <-as.table(table)
class(table)
table <- matrix(c(57,98,145,133,112,55,117,28,5),ncol=3,byrow=TRUE)
colnames(table)<-c("Never","Occasionally","Regularly")
rownames(table)<-c("Private","Public","None")
table
margin.table(table)
margin.table(table,1)
margin.table(table,2)
s <-margin.table(table,2)
s
s[,1]
class(s)
dim(s)
dimnames(s)
nrow(s)
ncol(s)
summary(s)
s <-as.table(s)
s
nrow(s)
ncol(s)
str(s)
t <-margin.table(table,2)
head(t)
t <-margin.table(table,1)
t
t[,3]
t[3]
t[3,1]
t[3,]
